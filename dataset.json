{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.................EB\nB..................B\nB.B.....BBBB.....B.B\nBB..B.E...........BB\nB............E..B..B\nBE...........B.....B\nB...EB.............B\nB.......B.....B....B\nB................E.B\nB........BP........B\nB.....BBBBB........B\nB.......B......E...B\nB..................B\nB...B...B..E.B.....B\nB......E.E.........B\nB.B..............B.B\nB............E.....B\nB..............B.E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...E..............B\nB..................B\nB.....E.E..........B\nB.............E....B\nBEB................B\nBB....B.......B....B\nB....B........BE..BB\nB.............E..EBB\nB....B....B..B.....B\nB..B..B...P........B\nB..B............E..B\nB.BBBBB............B\nB......B..B........B\nB...........E......B\nB.E..........B.....B\nB....BEBBB.B.......B\nB...........E.EB...B\nB........B........BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBEE................B\nB..........B.......B\nB..................B\nB..................B\nB..................B\nB........B.........B\nB.....B....B...B...B\nB..................B\nB..................B\nB..E......P........B\nB..................B\nB..B.......B.......B\nB..........B.......B\nB.........E........B\nB..E...............B\nB....B.............B\nB..................B\nB..E...............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....B.......B.....B\nB..................B\nB..................B\nBBE................B\nB..................B\nB....E.............B\nB.................BB\nB......B...........B\nB..................B\nB.........P........B\nB..................B\nB..................B\nB.B................B\nB..................B\nB...............E..B\nB..................B\nB.............E....B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB............B.E...B\nB..................B\nB..................B\nB..................B\nB.......B..........B\nB..........E.......B\nBB.B...........BBE.B\nB..................B\nB..................B\nB.........P...E....B\nB..............B...B\nB.............B..B.B\nB..................B\nB..................B\nB..................B\nB..................B\nB.....E............B\nB.................EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..B.B.....B.......B\nBE....B............B\nB..EE...........B..B\nB....E.....BBB.E...B\nB...E..............B\nB........BBBB......B\nB......B...........B\nB.....E...........EB\nB......BBB.........B\nBE.....B..PB.......B\nB......B......EE...B\nB...BBBB.....B..EE.B\nB...B..B.....BBB...B\nB.B..EBBBBB...B....B\nB.....B.....B......B\nB.....E............B\nB..E..........B....B\nB.EB.B..E..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..B............B..B\nBB...............B.B\nB............E.....B\nB...B..............B\nB.......E........E.B\nB..................B\nBBE................B\nB..................B\nB.........P.......EB\nB..................B\nB..BB......B.......B\nB......B...........B\nB...........B......B\nB........E.....B...B\nB..................B\nB.................EB\nBE.................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE.................B\nB.........B.BB...E.B\nB.....BE...........B\nB......B.BBBBBEEE..B\nBE...BB...B........B\nB.E......B.B.E.....B\nB..E.....B........EB\nB..................B\nBE.................B\nB....BBB..P........B\nB..B...............B\nB............B..B..B\nB.E..BBB......B....B\nB....E...BB..B...B.B\nB.........B.....E..B\nB........B.........B\nBE.................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...E......B.......B\nB..................B\nB.B...E..BE........B\nB....E..BBBB....B..B\nB............BBE...B\nB...........BBBBB..B\nB...B.............EB\nB.B...............EB\nB......B.........E.B\nB.B.......P......E.B\nB.......B.B.......EB\nBBE................B\nB.B................B\nB...B.BB.....B....BB\nB..................B\nB....E.....B.....E.B\nB.........E........B\nB.B..........B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....EB.......E....B\nBB..........E......B\nB..................B\nB.......BBBB.......B\nB...B...........E..B\nB.............B....B\nB..................B\nB..B.....B...BBBB.EB\nB..................B\nB.........P........B\nB................B.B\nB.......B..........B\nB..B...............B\nB...B..BE.........EB\nB......E..........BB\nB.E...........B....B\nBE...........B....EB\nB....B........B.EB.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.................EB\nB...B..............B\nB..................B\nB..................B\nB..................B\nB.....EB.......E...B\nB..................B\nB................B.B\nB..................B\nB.........P........B\nBE.................B\nB....E....B........B\nB..................B\nB.........E......B.B\nB..B..........B....B\nB....B....B........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....B....B.E......B\nB.............B....B\nB..E....B...B.B....B\nBE.E..........BBBBBB\nB.....BBBBBEBB.....B\nB.....E......BE....B\nB..B...............B\nB.......B..BBBBB..EB\nB.............B..E.B\nB.........P.....B..B\nB...B............B.B\nB.......B....B.....B\nB..EE...........B..B\nB....B......B......B\nB..........B....E.BB\nBE...B...B.........B\nB.....EE........EE.B\nB.....B.B........BEB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB.................B\nB..B........E......B\nB.E................B\nB..........E.......B\nB.......BE......E..B\nB....E.BBBB........B\nB........BBBB....B.B\nB..................B\nB.BE......B........B\nBE........P.......BB\nB...............E..B\nB..B..B.B..B......EB\nB..BB...BBBBBB..E..B\nB..B.......EE...B..B\nB.........B..EBBB..B\nB....B.B...B..E....B\nB......B...........B\nB...........EB.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nB..................B\nB...E.........B....B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB.....BB...........B\nB.........P........B\nB..................B\nB...E...........B..B\nB.....E............B\nB..................B\nB...BB.............B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B..............B\nB...........B......B\nB..................B\nB.....E............B\nB..................B\nB..............BE..B\nB................BEB\nB..................B\nB..................B\nB.B.......P.......EB\nB.B................B\nB..................B\nB..................B\nB...........E......B\nBB.E...............B\nB............B.B...B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........B.....EE.B\nB..................B\nB........EB...E....B\nB.....B...B........B\nB..................B\nB....E..........B.BB\nB..................B\nB...B..............B\nB.....B...........BB\nB........BP........B\nB...EE.........B...B\nB...........B.....BB\nB......BBBBB....E..B\nB....BBBB.......E..B\nB.............BBBB.B\nBE..E......B....E.BB\nBE.E..B...........BB\nB....B.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E..........B..BB\nB......BBB....EE...B\nB..B....B..........B\nBEB.........E...E..B\nB...BBBE.B.BE..E...B\nBE..EB..........B..B\nB..BBBB.......BEBB.B\nBEE..B.B........B..B\nB.........PBB......B\nB...BBBB........B..B\nB......B...........B\nB.....B.....B......B\nB......BBBEB.......B\nB...B.............BB\nB..EB........B.....B\nBE......E.E...B....B\nB....E..B..B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB......BE..........B\nB...........E......B\nB........B........BB\nB..B...............B\nB..................B\nB..B....E..........B\nB.BBBBB.....BBBB...B\nB..BE..............B\nB.E.B..............B\nB.........P.B...E..B\nB..................B\nB...EBBBB.........BB\nBE.....B........E..B\nB......B..EE...E...B\nB........B.........B\nB.B.............B.BB\nB.......E.E...B....B\nB...............B..B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...BB........E....B\nB...B..............B\nB..B...............B\nB..........E.......B\nB............B.....B\nB...............B..B\nB.........B........B\nB..................B\nB.....E...P........B\nB..B......B........B\nB..................B\nB..................B\nB.....E..B.........B\nB..................B\nB.E.E..........E...B\nB..........B.......B\nB....EB............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E.B.E..B.........B\nB...B......B.EEE...B\nB..................B\nB..........B.......B\nBB..BBBBBBB........B\nB....E.........B...B\nBE....BBBB.B.......B\nB....EE.B.....E....B\nB..B.....B.......E.B\nB.........P...E...EB\nB...B....B.........B\nB....E..BB..BBBB...B\nB..B.B.....B..B....B\nB........BBBBBB...EB\nB.......E..BBBBBB..B\nB....E....BBBB.....B\nB.E...EB......E....B\nB....B.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....B.B........B..B\nB.........E........B\nB....EBB.........E.B\nBB........B.E..B...B\nB..................B\nB....B........E....B\nB.EBBBB......B.....B\nB.....E............B\nBB.E.EE...P.B.E....B\nB.E....BB.....B....B\nBE..B...B..BB......B\nB..E....BBBBB......B\nB...BBBB...BBB..EB.B\nB......E..B.EBBBB..B\nB..................B\nB.B.......B.E..E.BEB\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nBB...BB.......B....B\nB.....B.......E.E..B\nB.E..E..B..BE......B\nB.....BBB..B.EB....B\nB.........B........B\nB....E.......BBBBB.B\nB..................B\nB..........B.......B\nB.....E...P........B\nB..........B.......B\nB....E.....BBBBB...B\nBB.....B..B...B....B\nB..EB.....BBBB.....B\nBE..E.............BB\nBE....E.E..........B\nB..B.......B.......B\nB...............B..B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....E.B....E.....BB\nB.B..B.B......E...BB\nB................E.B\nB...E....BBBE..B.B.B\nBE.........B.E....EB\nB......E.......E...B\nB.....E............B\nBB..............E..B\nBB.................B\nB.........P....BE..B\nBE.B.....B......B..B\nB......B......BBBB.B\nB..........BBBBB..BB\nB....B.E.E.....E.B.B\nB....BBBBB.....B.B.B\nB.......BBBBBBE....B\nB...E..B...........B\nBB....B...........BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E...........BB...B\nB....E.............B\nB..........B.......B\nBEE.BBBB.E...BBBBBEB\nB..B.E.B......BBB..B\nB..B.B...........E.B\nB...............E..B\nB..................B\nB.................EB\nB.......BBP......E.B\nB....EBBB.......E..B\nB..................B\nB........B........BB\nB..........E...E..EB\nB..B.....B.........B\nB..B....BBBBBBEB...B\nB.........B..B.....B\nB..B.B..EB.......B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB................EBB\nB........B.........B\nB..............B.E.B\nB.................BB\nB..E.............E.B\nB....E.............B\nB.B................B\nB........B......B..B\nB..................B\nB.........P...B....B\nB..................B\nB..................B\nB..................B\nB..B...............B\nB........B..E......B\nB..................B\nB.......BE.......E.B\nB........B.........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..EEBE....E.......B\nBB........B..B.....B\nB......E.B.........B\nB..E...............B\nB.....E........B...B\nB....B...BBB.......B\nB..................B\nB...E..............B\nB..B..E............B\nBE.BB.BB.BP..BBBBB.B\nB.BBBB......BB..E..B\nB...............B.BB\nB.........B....BB..B\nB..........EBBE..B.B\nB........E.......B.B\nB..BE.......BBB....B\nBE.................B\nB..B..E...B..E.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........B........B\nB.......B....B.....B\nB..................B\nB............E.....B\nB..................B\nB...B..............B\nB.B..E.............B\nB..................B\nB..................B\nB.........P........B\nB...............E..B\nB.E.B..............B\nB...............E..B\nB...B..............B\nB.......BE..B......B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB............E..E..B\nB.....B.......E....B\nB...E....BBBB......B\nB..............E...B\nB...B..............B\nB.E.......E........B\nB.........B....E...B\nB....B......BBB....B\nB..................B\nB.....E...P........B\nBE.....B...B......BB\nB..................B\nB.......B.B........B\nB.........BB...B...B\nB....B.............B\nB...........B..B...B\nB...........BE.....B\nB.E........B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B..........B\nB.............E.E..B\nB..................B\nB..................B\nB..................B\nB..........E.......B\nB.E....B...........B\nB..................B\nB..................B\nB.........PB......BB\nB..................B\nB...B..............B\nB..................B\nB..................B\nB...............B..B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB................BEB\nB..................B\nB......B...........B\nB.............B....B\nB..................B\nB.....E............B\nB..................B\nB.E...........E....B\nB........BP........B\nB..................B\nB...B..............B\nB..E.......BB....B.B\nB..................B\nB..................B\nB...........B.....EB\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....E.B..........BB\nB...B......E.......B\nB..BBB.........B...B\nB..........EBB.....B\nB.BBBEEB...........B\nB..B....B.B.......BB\nB................B.B\nB.......B......E...B\nB.....E............B\nB.BBBBB...P.....E..B\nB.......B.........BB\nB....B........BBB..B\nB...............E..B\nB....E.........E...B\nB..B....E.EBBBBBBB.B\nB....B.B.BE........B\nB.E.......B.E......B\nB........E.....E...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...B..............B\nB.........B........B\nB..................B\nB..............B...B\nB.....B......B.....B\nB..................B\nB..................B\nB...............E..B\nBE.E......P........B\nB..................B\nB...EBB........E...B\nB..................B\nB..B...............B\nB..............B...B\nB..........E.......B\nB.E.......B..B.....B\nB............E....BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.................EB\nB........E....E....B\nB..BBBBB...EE......B\nB............BE..B.B\nB.BBBBBEB........BEB\nB......EE..B....B..B\nB..................B\nB..........B...B...B\nB...............BB.B\nB..BBBBBB.P..B.....B\nB.E.......B..BEBBE.B\nB..........BBB.....B\nB..B............B..B\nB......B..E........B\nB....B..B......B...B\nB...EB.............B\nB....B...........E.B\nB..E..B...E......B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........B.B....B\nBB.B..B.....E..B...B\nB...E.BB..BBBB...E.B\nB.B.......BBEBB..B.B\nB.....E..........B.B\nB..................B\nB.......B....B..E..B\nBE......BBB.....E..B\nB..................B\nB.........P...B....B\nB.E................B\nB....B............EB\nB..EE.......B......B\nB.BBBBBE.B.E.......B\nBE.....BBBBB.E.B.B.B\nB.E.BBBB..E......B.B\nB...E.......B......B\nBB....E....B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....E...BE.E...B..B\nB............BB....B\nB..........E.......B\nB.B.....E......B...B\nB..................B\nB...E.......E.EB..BB\nBE.BBB.........B...B\nBB......BBBBB...EE.B\nB.....B...........BB\nB.........P....E.B.B\nB....B.............B\nB.B.E........BBBBBBB\nB.............E..B.B\nB..E.......B.......B\nB..................B\nB...............B..B\nB.......E.........BB\nB...B..............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.B..........E.....B\nB.E.....E..........B\nB....EE............B\nB.....B............B\nB............B...E.B\nBB..BBBEB..B.B.BE..B\nB.E.......BBBBB..B.B\nB...E.......BBBBBE.B\nBBE..E..BBBBB......B\nB.EBBBB...PB....B..B\nB..................B\nB................E.B\nBB........B.BBE....B\nB......B..E........B\nBB......BBBBBE...E.B\nB........BE........B\nB..........B.....BBB\nB.....BB..B.......BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE........E........B\nB....E.....B.......B\nB..B...........B...B\nB.......BBBE..E.E..B\nB..................B\nB.E..E.............B\nBE...B...BBBBBB...BB\nB..E....B..........B\nB..........B.BBB...B\nB......BB.P..B.....B\nB.E.E.EBB.........BB\nB.BBBB.....B.BBBBB.B\nB...............B..B\nB............EEBE..B\nB........B.......E.B\nB..B...............B\nB.B................B\nBB....E..B....BB...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB................E.B\nB..E.....B.........B\nB..................B\nB......B...........B\nB..................B\nB..................B\nB.E.B.........B.E..B\nB...B..............B\nB.......B..........B\nB..B......P.....B..B\nB........B...B.....B\nB......BBBBB...B...B\nB...EB............BB\nB..................B\nB................E.B\nB..B........E......B\nB.BE..........E....B\nB..E...............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....B.............B\nB....E......B..E...B\nB..........B....E..B\nB..B.....BBBB.....EB\nB............BBBBE.B\nB..................B\nB.E.E..........BB..B\nB....B.............B\nB............B.E...B\nB.....B...P.......BB\nBB.................B\nB....B.............B\nB.....B...B........B\nB................E.B\nB.....B...E.......BB\nB..................B\nB......B.........B.B\nB....E.....E.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...E..............B\nB.E.BBB.....B..E...B\nB....E.E.E....E....B\nB...........B.B....B\nB..................B\nB.......B.B.B....B.B\nB....BB.BBB........B\nB..................B\nB........BBB.......B\nB...B.....P........B\nBBB................B\nB........BBB....BE.B\nB..........B.......B\nB...E.......B.....EB\nB................B.B\nBE..E.E..........B.B\nB...........E......B\nB.......B..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB.E...............B\nB...B..............B\nB..................B\nB.E...B..........EBB\nB...BBBB..B........B\nB..................B\nB.E................B\nB..................B\nB.....E............B\nB.........P........B\nB...B..............B\nB............BB....B\nB.......B.....EE..BB\nB........B.........B\nB.....B............B\nB......B..E....E...B\nB..............B...B\nB..E...............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.B...........BE...B\nB...B.B.B....E.....B\nB....EB...BBB......B\nB...BBBBB......E...B\nB..B..E......EE....B\nBB.......E.........B\nB.B............E..BB\nB.......BBBBB......B\nB..BBBB...B........B\nB...BBB...P.....B..B\nB.E...B.B......B...B\nB................E.B\nB................E.B\nB....BBBBB...B.E...B\nB.....EB.........B.B\nBE.BBE..........EB.B\nB.B...........E....B\nBE.....E.....B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB.......B.........B\nB..........E.......B\nB......B...E....B..B\nB.....EB....B......B\nB..................B\nBE..........B......B\nB..................B\nB..................B\nB..................B\nB.........P........B\nB..B.........B.....B\nB..................B\nB.....B............B\nB..E...............B\nB...B........E.....B\nB..................B\nB......E...B.....E.B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......E..B.....B.B\nB..E.B.E.E.........B\nB........B.B.....B.B\nB.....EBE.B...BBBE.B\nB.......B...E......B\nB..................B\nB...EB..........B..B\nBB...E.............B\nB..............E..BB\nB.......B.P........B\nB...........BBBBBBBB\nB..E..............EB\nB.....B...B......B.B\nB.E.BBE.......B....B\nB..B........B......B\nBE.BB.E....B.....E.B\nB................B.B\nB.....B............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....BBE...........B\nB........E.B.......B\nB....E...BBBBB....EB\nB..................B\nBB.BBEB.B.....BBBBBB\nB...E.BB.....EE....B\nB.B....B..BBBB....EB\nB.....B.B...BBBBBE.B\nBE.........B.......B\nB..E..B...P........B\nB....BBB....BBBB...B\nB.E..............B.B\nB......B...B.....E.B\nB.E....E...........B\nB.....B............B\nB...........E.....BB\nB....BE....E.....B.B\nB..E..B............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB..E..B......BB...B\nB...BE......E....E.B\nB.....E............B\nBB.B..E............B\nB...B....BEB.......B\nB.B.....BBBB.......B\nB...BB.B...........B\nB...B..............B\nB..........B.......B\nB.B......BP.....E..B\nB.........B........B\nBB.................B\nB..E.E....BBB......B\nB.......E......E..BB\nB......B........E.EB\nB.....B..EBBB......B\nB..................B\nB......B.....E.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B.....E....EE..B\nB.......B..........B\nB....E...BBEBBBBBBBB\nB..........B..E....B\nB.E.....E......B...B\nB....E.............B\nB..................B\nB.E...E..B..B......B\nB....B.....BB.BBBBBB\nB..E.B....P.....E..B\nB......BBB...B....BB\nB.B..........B.B...B\nB.....B............B\nB.B...EBBBB.BBBBBB.B\nB...E...BBB...B....B\nB........B...B.....B\nB..E........E..B...B\nB........EEB...E...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB..........E...E...B\nB...BBBBB..B.......B\nB.............B....B\nB.........B........B\nB.............B....B\nB.....B.........BB.B\nBE............E....B\nB..B......P........B\nBB..E..............B\nB...B.....B........B\nB..................B\nB..............B.E.B\nB..................B\nB.....B.......E..E.B\nB..................B\nB........E...BBE...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...............BB.B\nB..................B\nB............E.....B\nB.......E......E..BB\nB.....B............B\nB..................B\nB...B..............B\nB..B...............B\nB........B.........B\nBE........P...B....B\nB.......B..........B\nB..................B\nB..................B\nB............E.....B\nB..............E...B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB......E...........B\nB..................B\nB..B...............B\nB...B.....EE.......B\nB..................B\nB....E......B......B\nB..................B\nB.B.......P.....E..B\nB...............B..B\nB...........B......B\nB..................B\nB......E...........B\nB...........B......B\nB..................B\nB.................BB\nB..............B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....E.............B\nBE.B...............B\nBE........B........B\nB.E.E.........B....B\nB............BBBBB.B\nB.E.BBBBB..E.BBB.E.B\nB..................B\nB....BBB..B...B....B\nBB............E....B\nB..B.B....P..B..B..B\nB.B.B....B....B....B\nBB.......BBBB...B..B\nB.............BEE..B\nB..B......B........B\nB.......B.E......E.B\nB..BBE..BBBB.E....EB\nB..B..B..EB....E...B\nBB....E........E...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........E.........B\nB........B.........B\nB..........BB......B\nB.......B.........EB\nB....E....E........B\nB..........B.......B\nB................E.B\nB..................B\nB...........B......B\nB.........P........B\nB..................B\nBB.................B\nB....B.............B\nB..................B\nB...B..............B\nB..................B\nB..................B\nB............E.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....B............B\nB...........B......B\nB............BEEE..B\nB.............E....B\nB....EE............B\nB..............B...B\nB..........BB...E.BB\nB.....B.B..........B\nBB.B...............B\nB.E.......PB.......B\nB..................B\nB.........B........B\nB.B.....B.....BBBBBB\nB...E...E..........B\nB..E..B..........B.B\nB..................B\nB..................B\nB.B.....BE.........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....E.E....B.....B\nB..................B\nB.E................B\nB............BE....B\nB.......B..BBE.....B\nB.EB...........B.E.B\nB..............B.B.B\nB........BBBB......B\nB.E....B...........B\nBB...B....P...E....B\nB.E........B.......B\nB..................B\nB..................B\nB..................B\nB..B.B.EB.......B..B\nB...E....BBEBBB....B\nB........B.........B\nB.E................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..............E...B\nB.......B..........B\nB..................B\nB....E.............B\nB...........E......B\nB...........E......B\nB..........B.......B\nB..................B\nB.........B......B.B\nB.........P........B\nB..................B\nB......B.......B.B.B\nB................B.B\nBB........B........B\nB..B...............B\nB..E........B......B\nB..................B\nBEE..........E.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........B.B......B\nBB.B..........E....B\nB....E...E..B.BBBBBB\nB............B.....B\nB.E..BBBB.EB..E....B\nBE...E....E........B\nB...B.BBBB.......B.B\nBB......B......E.B.B\nB..B...............B\nB..E......P.......BB\nB.................BB\nB...........B....B.B\nB....BBB...........B\nB.........E........B\nBE..E.BBBEB........B\nB.B.......BBBB..EEBB\nB..B.....E...B.....B\nBB..E......B.....E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....E.............B\nB.............E.B..B\nB..................B\nB......B...........B\nB..........E.......B\nB..............B..BB\nB....B..........E..B\nB..................B\nB.........P.......BB\nB..................B\nB.............E....B\nB..................B\nB.B....B.........E.B\nB..B...............B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E.............E..B\nB........B.........B\nB.....B............B\nB..B..E..BE..B.....B\nB...BE....E........B\nB...............B..B\nBB...B..........E..B\nB....E.B......B....B\nBE............E....B\nB.......B.P........B\nB.E........B...B...B\nB.....B..BBBBB.....B\nB............BBBBB.B\nB..................B\nB......B..B...E....B\nB..........BBBBE...B\nB....EB.B...E......B\nB.B.B............E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....EB.........B.B\nB........E...B.....B\nB..................B\nB.BB.E...E.......B.B\nB.....EEB..E..E....B\nB.............E....B\nB.B..B...B.........B\nB.............B....B\nB..................B\nBB..B.....P........B\nB..................B\nB..B...............B\nB.............B....B\nBE.....BBBBBBBB....B\nB...B..............B\nB.....B............B\nB.....E....B...EB..B\nB...E.......E....B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B......B...B\nB.............E....B\nB..................B\nB..................B\nB..........B.....B.B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........P....E...B\nB..................B\nB..................B\nB..................B\nB............B.....B\nB..........E.......B\nB..................B\nB........B.........B\nB.....E............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB................B.B\nB...........B......B\nB.............E....B\nB................E.B\nB...........E....B.B\nB..........B.......B\nB.E................B\nB.........B...E....B\nB...B.....P........B\nB.E................B\nB.B...............EB\nB..............E...B\nB.......B.....B....B\nB..............B...B\nB.............B..B.B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB.B................B\nB..................B\nB.......E...E......B\nB..B...............B\nB..................B\nB..................B\nB.............B....B\nB..................B\nBE........P........B\nB......B...........B\nB...............B..B\nB............B.....B\nB..................B\nB..................B\nB..................B\nB..................B\nB...E..............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB.................B\nBE.................B\nB..................B\nB..................B\nB.BE........E......B\nB...............B..B\nB..................B\nB.....BB...........B\nB..................B\nB.........P........B\nB..B...............B\nB..................B\nB..................B\nB..E...............B\nB................BEB\nB..................B\nB.......B..........B\nB.........B......E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........B.........B\nB..................B\nB.................EB\nB..................B\nB.............E..E.B\nB..................B\nB.............E....B\nB........B.........B\nB..................B\nB.........PB.......B\nB..................B\nB..................B\nB..................B\nB..............BB..B\nB..................B\nB.....B............B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E................B\nB..................B\nBE....E............B\nB..................B\nBB.......B.......E.B\nB...B......BBB.....B\nB..B.E.B........B..B\nB.E......B.........B\nB.................BB\nB...B.....P........B\nBE..............B..B\nB..BE.B............B\nB..B..E.......E....B\nB........B.BBBBB...B\nBB.......B.........B\nB...........E......B\nB..................B\nB...B.E............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........E...B.....B\nB.............B....B\nB..................B\nB........B..E...E..B\nB.................EB\nB....B..B...B......B\nB..................B\nB..................B\nB..................B\nB.........P........B\nB..................B\nB.....B............B\nB..E..B........B...B\nB..................B\nB....EB...B...E....B\nB...B..............B\nB..................B\nB............E.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB.............E....B\nB........E.........B\nB..B......B.B......B\nB.E................B\nB.BE..B............B\nB................B.B\nB...............B.BB\nB........BP........B\nB.....E...B........B\nB..................B\nB.....E............B\nB.B.E.....BBBB.....B\nB..B........E......B\nB.........E........B\nB.............E....B\nB..B..........B....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B...B......B\nB..............E...B\nBB.B......BBBBB....B\nB..B.....B......E.BB\nB....E...EBB.......B\nB.........BBBBBB...B\nB....BBB......E....B\nB..B............EB.B\nB..B....B..........B\nB....E....P........B\nB...E..B...........B\nB......BBBBBB.B....B\nBE.B...............B\nB...E..BBEBBB......B\nBEB...EE..........EB\nB...E...B.E....B.E.B\nB.B.E.........B...BB\nB..BB......E.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..E............E.BB\nBB...............E.B\nB....B.............B\nB.E.E.........B.E..B\nB...........B.B....B\nB.BBBB.............B\nB.........B........B\nB..................B\nB......B.........E.B\nB.........P.B......B\nB.E................B\nB.......BBBBB......B\nBB....E.....B..E...B\nBE....E....B.......B\nB..................B\nB..B...............B\nB................B.B\nB..........B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nB.............B....B\nB..BBB.E...B...E...B\nB...B.......E...EB.B\nB...............E..B\nB........BBB.......B\nB..B.BE......B.....B\nB........B.....E...B\nB............BBBE..B\nB.B.......P........B\nB..E..........E.E.BB\nB..............B..BB\nB....E...........E.B\nB..................B\nB..................B\nB...B..............B\nB....B..BBB........B\nB..B..B............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....E.........B..B\nB.E.B..E.E......EEEB\nB.........B........B\nB.................EB\nB..B...B....BB...BBB\nB........E....BB...B\nB..................B\nB..................B\nB......BBBBBBBB....B\nB.........P......B.B\nB...........B......B\nB..................B\nB.............E..E.B\nB....B...B.BBEB....B\nB..........B.......B\nB...........BE..B..B\nB..................B\nB.....E.B..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............E....B\nB....E.............B\nB..................B\nB....B.B..B.....E..B\nB....BBBBB.........B\nB....B.E.B...BBEEB.B\nB............B.....B\nBB....E.......E....B\nB....BE............B\nBEE.......P.B...B..B\nB.E.....BBB..BBB...B\nB...B.............BB\nB....B........BEB..B\nB..E.B....EB...BE..B\nB..........BBB..B..B\nB..BBBBB...B.E...B.B\nB....EB....E.......B\nB.....E........B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........B......B\nB...E..........E...B\nB...B.EEBEB.E.BE...B\nB......B...........B\nB......B.BB........B\nB...B....B....E....B\nB.....E...........BB\nB...B..............B\nB..................B\nB.........P....B...B\nB..................B\nB.......B..BBB..B..B\nB..............EB..B\nB.....BBBE.E....B..B\nB..E.B......B......B\nB.................BB\nBE...BB.....B..E...B\nB................E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........B.......E.B\nB............B.....B\nB..B...............B\nBB......E..........B\nB.....B......E.....B\nB..................B\nB..............E...B\nB..................B\nB..........B.......B\nB.........P........B\nB..................B\nB..........B.......B\nB..................B\nB.............B....B\nBE.........E.......B\nB..............B...B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E...E........E.B\nB..................B\nB....B.E...B.B.....B\nB........E......B..B\nB..BBBBBEEB.....B..B\nB.............B....B\nB...B.....B.B.BBB..B\nB........BBBB......B\nBB.BB....BPBB......B\nB....E..........EB.B\nB..E....B..BBB...B.B\nBE...........B...B.B\nB..E.......B.......B\nBB........E........B\nB...E......E...E.E.B\nB.EB....EB......B.EB\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........B...E.....B\nB...B..............B\nB....B...BB........B\nB......E.......B.E.B\nB..................B\nB..E...B...........B\nB.E......B...BBBBB.B\nB..BB..............B\nB....E.............B\nB.E.....B.P.......EB\nB.............B....B\nB..........B.......B\nB....E.....B....B..B\nB...B..BBEBB.......B\nB..........E.......B\nB..B...............B\nB..................B\nB.........E........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE.................B\nB......B...........B\nB...............EB.B\nB.............B....B\nB..................B\nB..........E.......B\nB..................B\nB.....E............B\nB..................B\nB.........PB.......B\nB................B.B\nB..................B\nB.........B........B\nB..................B\nB...............B..B\nB...............E.EB\nB..E...............B\nBB...B.E.B....B...BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B..........B\nB.........B......B.B\nB..................B\nB..................B\nB..................B\nB.....E............B\nB..................B\nB..................B\nB.......B..........B\nB.........P........B\nB..................B\nB.....E............B\nB..................B\nB..................B\nB..................B\nB.E........B.......B\nB..............B..EB\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 9/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....EE...B.B.B...BB\nB......E......B....B\nBEBBB......B.......B\nB...B.............EB\nB....E.....B.......B\nB.....BBBEE.E.BB...B\nB.BB...............B\nB..................B\nB...............E..B\nBB........P...B....B\nBB............BEBBBB\nBB........BBBBB....B\nBB......B....B.....B\nB...B........BE....B\nB......B...........B\nB.BBEBBE....EB...E.B\nB.........E..E.....B\nB.......B.....E..E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 4 enemies 'E' placed strategically\n        4. 6 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBB...............E.B\nB..................B\nB..................B\nB..................B\nB.............E....B\nB..................B\nB.......B..........B\nB...B..............B\nB....B.............B\nB.B.......P......E.B\nB..................B\nB..................B\nB..................B\nB..................B\nBB.................B\nB..................B\nB..................B\nB.E................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B............E.B\nB...B...B..E.E.....B\nBB..B........B.....B\nB..........E.......B\nB.......B..B..EE...B\nB........B.........B\nB..............B...B\nB........BBBB......B\nB..E.E.............B\nBEB.......P..B.....B\nB..................B\nB.............E...EB\nB..BBB...B.........B\nB.......B..........B\nB.....B....B.......B\nB..................B\nB..................B\nB..........E.B.B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....E......EB....B\nB..EE...........B..B\nB..B...............B\nB...B..........B...B\nB....B.......B..BEEB\nB........B...BBB.EEB\nB..BBBBB..........BB\nB.BE...............B\nB.B................B\nB..E......P...E..B.B\nB.......B.........BB\nB...B.........B....B\nB..............E.E.B\nB....B....E.E......B\nBB..BBBB......B....B\nB..................B\nB.B................B\nB....E.........B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B.B...........BB\nBE.E..BE.........B.B\nB...........E.E....B\nB...E.............BB\nB.E..........B.....B\nB........B..E.....BB\nB.......B..........B\nB.............BBB..B\nB..................B\nB.B.....B.P.B......B\nB.B................B\nBE..E..B.B.......BBB\nB....E.BBBB........B\nB.B.............E..B\nB.BE.B.............B\nB............BBBE..B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE..E.....B......B.B\nB..................B\nB......B...........B\nB........E.........B\nB...............B..B\nB............B.....B\nBBB................B\nB....E.............B\nBE.............EE.EB\nB..B......P.....E..B\nB............B.....B\nB..................B\nB.BBEB.......B....BB\nB............B.....B\nB............B..E..B\nBBBBB...........B..B\nB....B...........E.B\nB............B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E................B\nB...........B.B....B\nB...B.E........BB..B\nB........E.........B\nB.........BEEBBBB.BB\nB..................B\nB..................B\nB..................B\nB....BBB.........B.B\nB.........P......E.B\nB..............B...B\nB....E...B...B.....B\nB....E...B.........B\nB......E..........EB\nBB....BB...........B\nB......B...........B\nBB.....E...........B\nB....B............EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....B.............B\nB....E.E.........EBB\nB...........BEBB...B\nB...E.E...EBB......B\nB.............BBBB.B\nBE.........E....B..B\nB.B...E.......BE..EB\nB...E.BBBB..B....B.B\nB.B.....B..BBBB....B\nB.........PB.....EBB\nB...............B..B\nB.....B.......B....B\nB.....B............B\nBB......B.BBBBEB...B\nB...............E..B\nB.B.........E......B\nB.................BB\nB.....E..BB.......BB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB......B......B....B\nB..................B\nB..................B\nB.B....BBBBB.....E.B\nB...........BE....EB\nB..................B\nB..............E...B\nB.......B..........B\nB...............E..B\nB....E..B.P........B\nB......B.B.........B\nB..............E...B\nB......B...B..B....B\nB..................B\nB.B.........E.....EB\nB...............B..B\nB...............B..B\nB...B.E............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..E..B...........BB\nB...B.BB.......E...B\nB...BB.......B.....B\nB....B.........E...B\nB.EBB.......B...E..B\nB...B....B.........B\nB..EBBBBB.....E....B\nB..............E.E.B\nB.........P........B\nB..................B\nB...........BB.....B\nBB................EB\nB...B...........B..B\nB.........E...B...EB\nB..........BBBBB.B.B\nB.EEB....B...E.....B\nB....E....B........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.E........E.......B\nB..................B\nB....B.............B\nB..B...............B\nB..B.....E.......E.B\nB....E.............B\nB..................B\nB.E................B\nB..................B\nB.........P.......BB\nB..................B\nBE.................B\nB..........B.......B\nB..........B.B.....B\nB..............B...B\nB....B...B.........B\nB.........B.....E..B\nB............B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB............E.....B\nB............B..BE.B\nB...B..B........EB.B\nB..B..B......E.B...B\nB..................B\nB..................B\nB..................B\nB.......B..........B\nB...............B..B\nB.........P........B\nB..................B\nB...E..............B\nB..............E...B\nB..................B\nB.............BBB..B\nB.....EB....B.E....B\nBB..B..............B\nB............E.E...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 3/10\n        - Number of enemies: 8\n        - Number of barriers: 12\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 8 enemies 'E' placed strategically\n        4. 12 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....E....E.......B\nB.E...E............B\nB.................BB\nB........B.........B\nB..E...............B\nB..................B\nB.....B............B\nB..................B\nB..B..............BB\nB.........P........B\nB..................B\nB..................B\nB................B.B\nB..............B...B\nB.......E...B..EB..B\nB..................B\nB....B.B....E..B...B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 7/10\n        - Number of enemies: 16\n        - Number of barriers: 24\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 16 enemies 'E' placed strategically\n        4. 24 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B.B............B\nBE......B..........B\nB........B.......B.B\nB..BBB.....BE..B...B\nB..........B.......B\nB.E.........E......B\nB.....E.....B...E.BB\nB.......B..........B\nBE..B.........BBB..B\nB...B...BBPBB..B..EB\nB..........B.......B\nB.EE.............EBB\nB..E.....B..B..B...B\nBEB................B\nBB........B.....B..B\nB.EBBBE............B\nB................B.B\nB.................EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 10/10\n        - Number of enemies: 20\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 20 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE.B...............B\nBB...B.B..E.....E..B\nB...EE..B...BBBBBB.B\nBB.B...E.....BBBB..B\nB...BBBBB.B......B.B\nB...BEBBE......B..EB\nBB..E.........B....B\nB.....E............B\nB........B.........B\nBB.E......P.....B..B\nB..................B\nB......B.BBBBB....BB\nB......B..B........B\nB.....BBB.......B..B\nB..................B\nB...E.BEBB.E..B..B.B\nB............E..BEEB\nB...E..B......E.B..B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....B...E.........B\nB......B....B....B.B\nB..........B......EB\nB..................B\nB.....E........BB..B\nB..E...E...EE......B\nB.....BBBB.B......EB\nB.........B......B.B\nB.E..........B..B.BB\nB..E......P....E.E.B\nB.BBB.....BBBB..B..B\nB.........B........B\nB...E.E.BB.........B\nB..................B\nB......BBBBB...BB..B\nB.....B..EEE...B...B\nBB.B..E............B\nB.......B.....B....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 5/10\n        - Number of enemies: 12\n        - Number of barriers: 18\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 12 enemies 'E' placed strategically\n        4. 18 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..E.E.E...........B\nB..................B\nBB.EB..E...........B\nB...B.....B........B\nB..................B\nB....BB.......B....B\nB..................B\nBEB..B.............B\nB....B.....BBB.....B\nB.........P...B....B\nB..BBBB............B\nB..................B\nBBE................B\nB.........B........B\nB........B.........B\nB..B..B...........EB\nB...B..............B\nB.E.........EEB..E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 6/10\n        - Number of enemies: 14\n        - Number of barriers: 21\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 14 enemies 'E' placed strategically\n        4. 21 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........B......B\nB...EE...E.........B\nB.........BB...E...B\nB...........B......B\nB.B.EB.E..BE..E....B\nB...B.........E....B\nB..................B\nB...B.......B.....EB\nB..B...............B\nB..B.E....P........B\nB..........BB......B\nB.BB..........B....B\nB..................B\nB..E..........BBB..B\nB....B.....BBBBBB..B\nB....BE............B\nB..................B\nB............B..E..B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 4/10\n        - Number of enemies: 10\n        - Number of barriers: 15\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 10 enemies 'E' placed strategically\n        4. 15 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......E..E.......B\nB........E.........B\nB..................B\nB.....E..BBBB.B....B\nB.EBB..............B\nB...E........B.....B\nB.....B............B\nB........BB.B.....BB\nB.....B........E...B\nB.....B...P........B\nBB.................B\nBE...E..........E..B\nB..................B\nB........B.........B\nB..................B\nB..................B\nB..................B\nB......BB..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 8/10\n        - Number of enemies: 18\n        - Number of barriers: 26\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 18 enemies 'E' placed strategically\n        4. 26 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.B.......E........B\nB.....B...E........B\nB...E.....E.E..B.B.B\nB..................B\nB...E...E..B......BB\nB.E....B..........EB\nB.....B...BBBB...E.B\nB.B...EB...........B\nBE..E..............B\nB.B....BBBP.......BB\nB....BBB.....B.....B\nB...........B......B\nB............B.B...B\nB..B.BBBBB....E....B\nB.....BBBE........EB\nB...........B...BB.B\nB....B.....E......BB\nB........E...B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters\n        2. The player 'P' placed in a good starting position\n        3. 6 enemies 'E' placed strategically\n        4. 9 barriers 'B' placed to create interesting paths\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....E.............B\nB.......B..........B\nB...B.......E......B\nB...B..............B\nB.........B........B\nB.....B............B\nB...........B......B\nB.............E....B\nB.B...............EB\nB......B...........B\nB.......B..........B\nB..............B...B\nB..............B...B\nB....E.......B.....B\nB..E....B..........B\nB.........E........B\nB.P...............EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....E.............B\nB...B...E....B.....B\nB.........B........B\nB....E.....B.......B\nB.............E....B\nB....B............EB\nB......B...........B\nB...............B..B\nB...E..............B\nB.....B.........B..B\nB.E..............B.B\nB.................EB\nB.E....B...........B\nB..........E.......B\nB....B.............B\nB...P..............B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 18 inner 'B' tiles + border of 'B's\n    - Number of enemies: 12 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 18, do not block player\n    3. Enemies: exactly 12\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.B.E..............B\nB.B...E............B\nB..................B\nB..........B.......B\nB.................EB\nB...........E..E...B\nB.EBBBBB...........B\nB.............B..B.B\nB.......B..........B\nB.E.......P....B...B\nB...........B.....BB\nB...B..........B...B\nBEE.BBB.........B..B\nB........E.........B\nB...B..B........E..B\nB..................B\nB...B..........B...B\nB.E........B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..............E...B\nB.EB......B.......EB\nB..B..........B....B\nB...B....E....B....B\nB..E...............B\nB......E..B........B\nB...B.......E......B\nB........B....B....B\nB....E.............B\nB..B.......E....B..B\nB.............B....B\nB.EBB....B......E..B\nB......E...........B\nB..B.....E..B......B\nB....B.........B...B\nB...E..B...........B\nB.............E....B\nB...P......B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.................EB\nB...B..............B\nB........B.........B\nB.................EB\nB.....B............B\nB.............B....B\nB...E..............B\nB.............B....B\nB.................EB\nB......B...........B\nB..................B\nB...B..............B\nB........B.........B\nB.E................B\nB.............B....B\nB.................PB\nB..B...............B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nBP....B.......E....B\nB....B.............B\nB....B.....B.......B\nB.........B....E...B\nB..E...............B\nB......B...........B\nB.............E....B\nB....E..B..........B\nB..............B...B\nB..B.....E..B......B\nB....B.............B\nB...........E...B..B\nB........B........EB\nB.....E.........E..B\nB.........B........B\nB..E...............B\nB.......B.......E..B\nB......E.........B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E..............B\nB.......B..........B\nB.............E....B\nB.B...........B....B\nB....B.............B\nB..........E.......B\nB............B.....B\nB.................EB\nB......E...........B\nB..B...............B\nB.............B....B\nB..........E.......B\nB..............B...B\nB.................PB\nB.E......B.........B\nB....E.............B\nB.............E....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 21 inner 'B' tiles + border of 'B's\n    - Number of enemies: 14 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 21, do not block player\n    3. Enemies: exactly 14\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..B..........B....B\nB................B.B\nB........BEBE......B\nB...E.........B....B\nB.....E.....BBB....B\nB............B...B.B\nB..E....B....B.....B\nB..................B\nBB..E..............B\nB.........PB.......B\nB...E........BBB..EB\nBBB...........B....B\nB............B....BB\nB.BEBBBE...........B\nB..................B\nB..................B\nB.E.B............B.B\nB.B.........EB.E..EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 24 inner 'B' tiles + border of 'B's\n    - Number of enemies: 16 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 24, do not block player\n    3. Enemies: exactly 16\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB............B.....B\nB...B.......E...EE.B\nB...B.B............B\nB................B.B\nBB.....B......E....B\nB.BBB.E......E.....B\nB...BBB..BBBBB.....B\nB.B................B\nB...E..............B\nB.........P.....E..B\nB.......B..........B\nB.B.EBBB..B.....E..B\nBE.................B\nBE.E...............B\nB......BEBBBB....B.B\nB.E........BBB.....B\nBE.B...............B\nB........BBB.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..E........E......B\nB..B.........B...E.B\nB.......B..........B\nB...B.............EB\nB.......B..........B\nB..E.......E.......B\nB..........B....B..B\nB..B...............B\nB..........B...E...B\nB..E.............E.B\nB..........B.......B\nB....E........B....B\nB.......B..........B\nB..E.......B.......B\nB..........E.......B\nB.........P........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nB...B.B............B\nB..............E...B\nB.......B.B...B....B\nB...E....B.......E.B\nB...B..........B...B\nB.....B............B\nB.E............B...B\nB.........B........B\nB.............B....B\nB....E............EB\nB...B..............B\nB.B.......B........B\nB.....E..B....E....B\nB.................EB\nB..E...............B\nB......B...B.......B\nBP.................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.P....E...........B\nB....B....B.B......B\nB..E......E..B.....B\nB...B.....B....E...B\nB....E.............B\nB......B...B.......B\nB..B.........E.....B\nB......E....B......B\nB...B.......B......B\nB.........E...B....B\nB.B....B..........EB\nB..........E..B....B\nB..E....B..........B\nB....B.....B.......B\nB...E..........E...B\nB........B...B.....B\nB....E.........B...B\nB...........E......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....E.............B\nB..B.....B.........B\nB.......B....E.....B\nB...B..............B\nB.........B.......EB\nB..E...B...........B\nB.......B........E.B\nB.B.............B..B\nB......E...B.......B\nB.....B......E.....B\nB..........B.......B\nB.....E............B\nB.....B.......B....B\nB..E......B........B\nB.........E...B....B\nB.........P........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E..............B\nB......B...........B\nB.............E....B\nB.....B........B...B\nB...........B......B\nB....E.............B\nB..B......E........B\nB........B.........B\nB..........P.......B\nB..............B...B\nB....B.............B\nB.......E..........B\nB..............B...B\nB...E..............B\nB........B....E....B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....B.......E.....B\nB....B.............B\nB....B..E.........EB\nB....B....B........B\nB.........B.....E..B\nB..E......B........B\nB..........B.......B\nB..P.......B.......B\nB...........B......B\nB..E.......B.......B\nB...........B......B\nB....E.............B\nB.............E....B\nB..........B.......B\nB.........B........B\nB.........B........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 21 inner 'B' tiles + border of 'B's\n    - Number of enemies: 14 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 21, do not block player\n    3. Enemies: exactly 14\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..EB.............EB\nB..............B...B\nB.................EB\nB......EE..........B\nBE....B..B..B......B\nB..BBE..E.......B..B\nB...B..............B\nB.B..B....B........B\nB.....E..........BEB\nB.........P......B.B\nBB......B..........B\nBBEE............B.EB\nB..............B...B\nB........BBBBBBBB..B\nB.B................B\nB.B...........E....B\nB......B...........B\nB...........B......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........B........B\nB...E.....B....E...B\nB.........B........B\nB....E............EB\nB.........B........B\nB..................B\nB.B....E...B....E..B\nB..................B\nB...B..............B\nB.........E........B\nB.......B.........EB\nB....E.......B.....B\nB.......P.........EB\nB.........B........B\nB....E.............B\nB.........B....E...B\nB.................EB\nB.........B........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 21 inner 'B' tiles + border of 'B's\n    - Number of enemies: 14 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 21, do not block player\n    3. Enemies: exactly 14\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B.E........B\nB.....E.........E..B\nB............BBBB..B\nB....BE.B.E.B......B\nB..............E..BB\nB..............BB..B\nB.....B...........BB\nB...B..............B\nB.B...............EB\nB.........P........B\nB..................B\nB..........B.BBBBB.B\nB.E........B.......B\nB............BE....B\nB.................BB\nB.......BBBBB....E.B\nBBE.E..........E...B\nB.B.......E....B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 24 inner 'B' tiles + border of 'B's\n    - Number of enemies: 16 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 24, do not block player\n    3. Enemies: exactly 16\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.B...............BB\nB.....B...........EB\nB............E.....B\nB..BBB.E...B.BBBB..B\nB..................B\nB.E.....B.....E....B\nB..................B\nB...........B......B\nB.....E........B.B.B\nB...B.....P..BBBBB.B\nB..................B\nB..BB..........B...B\nB............B.....B\nB..E......B....B...B\nBB...E...BBBB.E..EEB\nB.......B......E..EB\nB...E....B.........B\nB.B........E...BEB.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.P...........B....B\nB.......B..........B\nB.....E..B....E....B\nB..B...............B\nB.......B....E.....B\nB...B..............B\nB.....B...........EB\nB.E.......B........B\nB...E..............B\nB.....B.........E..B\nB........EB.....B..B\nB..E...............B\nB..B......EB.......B\nB...B..............B\nB...B..E...........B\nB......B....E......B\nB........B.........B\nB.E............B..EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 18 inner 'B' tiles + border of 'B's\n    - Number of enemies: 12 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 18, do not block player\n    3. Enemies: exactly 12\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB........E........EB\nB...B.......B......B\nB...B..E...B....B..B\nB.......B......B...B\nB.P....B.........E.B\nB...B........B.....B\nB......EB....B.....B\nB...B..............B\nB..E..B...E........B\nB.....B...EB....B..B\nB.........B....B...B\nB....E....B........B\nB..B........B..E...B\nB...B.....B........B\nB..EB........E.....B\nB........B....B....B\nB..E.....B...E.....B\nB.E..............E.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 18 inner 'B' tiles + border of 'B's\n    - Number of enemies: 12 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 18, do not block player\n    3. Enemies: exactly 12\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......E..........B\nB....B...E.........B\nB........BB.E......B\nB..................B\nBB.....E...E.......B\nB...B..............B\nB..............E...B\nB............BB....B\nB...B..B...........B\nB.........P.....E..B\nB.E....B.........BBB\nB..................B\nB............BBBBB.B\nB..B.E.......B..E..B\nB...E..............B\nB........E....BBBBBB\nB......B...........B\nB....B....B..B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E..............B\nB..........B.......B\nB.P........B.......B\nB..........B.......B\nB..................B\nB...B..............B\nB...B...E..........B\nB..................B\nB..........B.......B\nB..........B.......B\nB..................B\nB..................B\nB..............E...B\nB..................B\nB.E................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..E...............B\nB....B....E........B\nB..................B\nB...B..............B\nB..........B.......B\nB..................B\nB..E...............B\nB..................B\nB..............E...B\nB..................B\nB....P.............B\nB..........B.......B\nB..................B\nB..................B\nB....B.............B\nB..................B\nB..B.........B.....B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nB..B...............B\nB..B.....E.........B\nB..B...............B\nB.........B........B\nB...........B......B\nB..E........B......B\nB............E.....B\nB.....B............B\nB.....B....E.......B\nB.........B........B\nB.........B........B\nB.E.............P..B\nB.......B..........B\nB.......B..E.......B\nB......B...........B\nB.............E....B\nB.................EB\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB....E.............B\nB..................B\nB..........B.......B\nB.B........B.......B\nB...........B......B\nB.E............E...B\nB...B..............B\nB.......B..........B\nB..........B.......B\nB..................B\nB.....E........B...B\nB..........B.......B\nB..................B\nB...............E..B\nB..P...............B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB.E..........B.....B\nB..................B\nB..................B\nB.................BB\nB..................B\nB..................B\nB..................B\nB...........B......B\nB.........P........B\nB.....E............B\nB.............B....B\nB..................B\nB.........B........B\nB..................B\nB..E...............B\nB.......E..........B\nB......B...........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nBE........B.....B..B\nB..............B...B\nB..........B..B....B\nB............BB....B\nB..................B\nB...............B..B\nB.....E........E...B\nB..................B\nB..................B\nB.........P........B\nB..................B\nB..B...............B\nB..................B\nB.............E....B\nB.......EE.........B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..E...............B\nB......B..B........B\nB.........E....E...B\nB..................B\nB....B.....B....E..B\nB...............B..B\nB..................B\nBE.................B\nB........BP........B\nB.....E............B\nB.................EB\nB......B...........B\nB..B...............B\nB..................B\nB..................B\nB..........B....BB.B\nB........E....B....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB....BB............B\nB........E.........B\nB............B.....B\nB..E.............E.B\nB..............B...B\nB....E.......BBBBB.B\nB..............E...B\nB...B..............B\nB.............E....B\nB......B..PB....E.BB\nB..................B\nB..E...............B\nB..................B\nB..................B\nB....B.B.....E....BB\nB....B......BB.....B\nB..................B\nB..B......E........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..B...............B\nB..................B\nB..................B\nB..................B\nB..E...............B\nB..................B\nB..................B\nB..................B\nB..B.........B.....B\nB.........P........B\nB..................B\nB.....E............B\nB..................B\nB..................B\nB........B.........B\nB.....E..........B.B\nB.E................B\nB.......B..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......B....E....EB\nB..................B\nB........E.........B\nB..................B\nB..................B\nB..................B\nB.B................B\nB...............B..B\nB........B.....B...B\nB.........P........B\nBE.............E...B\nB.......B..........B\nB..BE..............B\nB..........B.......B\nB..................B\nB........B.........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............B....B\nB.........BB.......B\nBE.........B..E.E..B\nB....E...EB........B\nB.....B............B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........P........B\nB..................B\nB.................BB\nB...B..............B\nB.E................B\nB............B.....B\nB..........EE......B\nB.....B............B\nB..........B.....B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 6 inner 'B' tiles + border of 'B's\n    - Number of enemies: 4 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 6, do not block player\n    3. Enemies: exactly 4\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB......B...........B\nB.....B...B........B\nB.................EB\nB.............B....B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........P........B\nB..................B\nB..B...............B\nB..................B\nB..................B\nB............E.....B\nB................B.B\nB..................B\nB.E....E...........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 9 inner 'B' tiles + border of 'B's\n    - Number of enemies: 6 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 9, do not block player\n    3. Enemies: exactly 6\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............B....B\nB...............E..B\nB...........E..B...B\nB...............E..B\nB...........B......B\nB..........E.......B\nB.E.............B.EB\nB......B...........B\nB..................B\nB..B......P........B\nB..................B\nB.B................B\nB..B...............B\nB..................B\nB..................B\nB......B...........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 12 inner 'B' tiles + border of 'B's\n    - Number of enemies: 8 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 12, do not block player\n    3. Enemies: exactly 8\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..........E.......B\nB........B.........B\nB..E...........B...B\nB..................B\nB..................B\nB..................B\nB..................B\nB...........B.E....B\nB..B......P......E.B\nBB..............B.BB\nB........B.........B\nBB...B.............B\nB...E..............B\nB..................B\nB...BE.............B\nB.....E............B\nB...E.B............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n    Generate a top-down 2D game map as a JSON array of strings.\n\n    Specifications:\n    - Size: 20x20 tiles\n    - Number of barriers: 15 inner 'B' tiles + border of 'B's\n    - Number of enemies: 10 'E' tiles\n    - Player: 1 'P' tile, placed so it can move\n    - Empty spaces: '.' tiles\n\n    Rules:\n    1. Map borders must be 'B' (top, bottom, left, right)\n    2. Inner 'B' tiles: exactly 15, do not block player\n    3. Enemies: exactly 10\n    4. Player: exactly 1 'P', can move\n    5. Return only JSON array of strings, no extra text\n\n    Example 5x5:\n    [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n    ", "map": "BBBBBBBBBBBBBBBBBBBB\nB......B.E.........B\nB......B....B......B\nB..................B\nB..................B\nB......B..........EB\nB.B...B......B...B.B\nB.....E.......E....B\nB.............B....B\nB..................B\nBB.....B..P........B\nB..................B\nB..E............E.BB\nB....BBBBB.......B.B\nB..........E.......B\nB.......B..........B\nB.................EB\nB.......EB....E....B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..........B..E....B\nB..........B.......B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........P........B\nB....E.............B\nB...B..............B\nB.....B............B\nB..................B\nB..................B\nB...B.........B....B\nB.................EB\nBE.................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..E...............B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........B........B\nB..................B\nBB................BB\nB..................B\nB.........P........B\nB..................B\nB.................BB\nB..................B\nB..................B\nB.........B........B\nB............E.....B\nB..................B\nB.E....E.....B.....B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 2", "map": "BBBBBBBBBBBBBBBBBBBB\nB...E....E.........B\nB.B................B\nB..................B\nB...B.........E....B\nB.............E....B\nB..................B\nB..................B\nB............B.....B\nB..................B\nB.........P.B....B.B\nB..................B\nB..................B\nB.B................B\nB.E................B\nB......B.......E...B\nB.................BB\nB..................B\nB..........B.......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 3", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............E....B\nB........B....B....B\nB..B...............B\nB..................B\nB..........B.......B\nB...E...E....B.....B\nB.....B............B\nB................B.B\nB..................B\nB.........P........B\nB...E..............B\nBE.E...............B\nB.................EB\nB.......B..........B\nB...........B....B.B\nB.............B..E.B\nB..................B\nB....B.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB........B.......E.B\nB.........E........B\nB..................B\nB..................B\nB...........E.B....B\nB..................B\nB.....B............B\nBB.................B\nB..................B\nB.........P........B\nB..................B\nB..B...............B\nB..................B\nB..................B\nB..................B\nB...BE.............B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB............E.B...B\nB..................B\nB...........B......B\nB..................B\nB............E.....B\nB..................B\nBE.................B\nB.B................B\nB..................B\nB.........P........B\nB.................BB\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB........E.........B\nB...BB.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 2", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............B...EB\nB..................B\nBE..........B......B\nB..E...............B\nB..................B\nB..................B\nB.....B.B..........B\nB..................B\nB..................B\nB..E......P........B\nB....E.............B\nBB.................B\nB....B.............B\nB..................B\nB..B...............B\nB.BE...............B\nB..................B\nB....B.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 3", "map": "BBBBBBBBBBBBBBBBBBBB\nB........B......B..B\nB...E..............B\nB.................EB\nB.............E....B\nB..................B\nB..................B\nB..................B\nB...B..............B\nB..................B\nB...B.....P.......BB\nB..................B\nB..........B....E..B\nB......B...........B\nB..B.B.............B\nB.......E..B.E...E.B\nB..................B\nB.....EB........B..B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB.............E....B\nB...............B..B\nB......E...........B\nB..........B.......B\nB..................B\nB..................B\nB.B................B\nB.........P........B\nBB.................B\nB..................B\nB....B............EB\nB..B...............B\nB..................B\nB..................B\nB..................B\nB.......E..........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB.E...........E.B..B\nB...E........B.....B\nB..................B\nB..................B\nB.................EB\nB..................B\nB..................B\nBB........P........B\nB.............B....B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB.......B..........B\nB................B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...........B..B...B\nB........B.........B\nB..................B\nB..................B\nB..................B\nBB.................B\nB...............B..B\nB..................B\nB..E......P........B\nB.............E....B\nB..................B\nB...E..............B\nB...............E..B\nB..................B\nB..................B\nB.......B..........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..............E...B\nB..................B\nB.E................B\nB.................BB\nB.......B......B...B\nB..................B\nB..................B\nB..................B\nB..................B\nB.........P......B.B\nB..................B\nB..................B\nB..................B\nB..................B\nB...........B......B\nB..................B\nB...........B.E....B\nB....E.............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB................B.B\nB..................B\nB...E.............BB\nB......EE..........B\nB............B.....B\nB..................B\nB..................B\nB.........P..BE.B..B\nB..................B\nB..................B\nB.........B........B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 2", "map": "BBBBBBBBBBBBBBBBBBBB\nB...............E..B\nB......E...........B\nB......E...........B\nB..................B\nB.........E........B\nB................E.B\nB...E..............B\nB....B.............B\nB.......B..........B\nB.........P.....B..B\nB..................B\nB....B.....B.......B\nB.................BB\nB..................B\nB....B.............B\nB...........B......B\nB..................B\nB.....B............B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....B...B.......EB\nB...........B......B\nB..................B\nB..................B\nB..................B\nB...............E..B\nB..................B\nB..................B\nB.....B.......B....B\nB.........P........B\nB..................B\nB.E................B\nB.............E....B\nB..................B\nB..................B\nB.................BB\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........B......B\nB..................B\nB.................EB\nB.....E............B\nB..E...............B\nB..................B\nB................B.B\nB..................B\nB.....E..........B.B\nB........BP........B\nB..................B\nB.....B........B...B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............E...BB\nB..................B\nB...............E..B\nB..................B\nB...E..............B\nB..................B\nB..................B\nB.......B..........B\nB....B.........B...B\nB.E.......P........B\nB................B.B\nB..................B\nB..................B\nB..................B\nB..........B.......B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.............E....B\nB..................B\nB..................B\nB..................B\nB..................B\nBB.................B\nB..................B\nB...............B..B\nB..................B\nB.........P........B\nBE...............B.B\nB..................B\nB...........B......B\nB...E..............B\nB..................B\nB.......B...B......B\nB........E.........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB..............E...B\nB..................B\nB........B.........B\nB..................B\nB..................B\nB..................B\nB.............E....B\nB.....B...P........B\nB..................B\nB..........B.B.....B\nB...B..............B\nB..................B\nB..................B\nB..................B\nB.E................B\nB....B.........E...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........B........B\nB..................B\nB..................B\nB.......E..........B\nB..................B\nB..................B\nB......B.......B...B\nB..................B\nB..................B\nB.........P........B\nB.............B....B\nB.E...............EB\nB..........B.......B\nB..................B\nB..................B\nB.B..........E.....B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 2", "map": "BBBBBBBBBBBBBBBBBBBB\nB...B..E..E........B\nB......B...........B\nB..................B\nBE..........B....B.B\nB..................B\nB..........B.......B\nB..................B\nB...............B..B\nB..................B\nB....E....P........B\nB..................B\nB................E.B\nB..................B\nB..................B\nBB.................B\nB.....E............B\nB..................B\nB.B.............B..B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 3", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB.......B..B.......B\nB...............B..B\nB..................B\nB..................B\nB.....E............B\nB..............B...B\nB..E..B.B..........B\nB..................B\nB.........PB..B....B\nB.....B............B\nB.................BB\nB.........B........B\nB.......B..........B\nB...........E......B\nB.....E.E..........B\nB......E...........B\nB.......E...E......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 4", "map": "BBBBBBBBBBBBBBBBBBBB\nB.................EB\nB..................B\nB..B....B..........B\nB..........E.....E.B\nB..E....EBB.B..B...B\nB..................B\nB..................B\nB....B..B.....B....B\nB........B.........B\nB.........P........B\nB..................B\nB...............B..B\nB.............E.E..B\nB................B.B\nB......B....B.....EB\nB...E.BB...........B\nB..........B.......B\nB.........E........B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..E...............B\nB..................B\nB...............B..B\nB.......B..........B\nB...E...E..........B\nB.....B............B\nB........B.B.......B\nB..................B\nB..................B\nB.........P........B\nB..................B\nB..................B\nB..................B\nB..................B\nB..B...............B\nBE.................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB.............B....B\nB..................B\nB..............B...B\nB..................B\nB.......B..........B\nB..................B\nB..................B\nB.......B.P........B\nB...............E..B\nB..................B\nB...............B..B\nBE.....E...........B\nB..................B\nB.............E....B\nB..................B\nBB.................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.......E.....B....B\nB..................B\nB..........E.......B\nB...........B......B\nB..................B\nB.B................B\nB..................B\nB......B...........B\nB..E....B..........B\nB.........P........B\nB..................B\nB..................B\nB.........B........B\nB..................B\nB..................B\nB........E.........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB..................B\nB..................B\nB..E...............B\nB.E.......E........B\nB..................B\nB..................B\nBB.................B\nB.........P......B.B\nB..................B\nB..............B...B\nB..................B\nBE.................B\nB..................B\nB.................BB\nB..................B\nB.......B........B.B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB........E.........B\nB..........B.......B\nB..................B\nB.B................B\nB..................B\nB..................B\nB..................B\nB....B.............B\nB.........B........B\nB.........P........B\nB..................B\nB..................B\nB....B.............B\nB..E...............B\nBE................BB\nB.......E..........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB.........E........B\nB...............E..B\nB..................B\nB..........B.......B\nB.................BB\nB..................B\nB..........B.......B\nB..................B\nB..................B\nB.........P........B\nBE.............B...B\nB..................B\nB..................B\nB....E.............B\nB..................B\nB...........B......B\nB..................B\nB...........B......B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB......BB..........B\nB.B................B\nB..................B\nB..................B\nB..................B\nB..................B\nB...............B.EB\nB............B.....B\nB....E....P.......EB\nB..................B\nB..................B\nB..................B\nB..................B\nB......B........E..B\nB..................B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 1", "map": "BBBBBBBBBBBBBBBBBBBB\nB...............E..B\nB..................B\nB...............B..B\nB..................B\nB..................B\nB.E................B\nB..................B\nB...............B..B\nB..................B\nB.........P........B\nB..................B\nB..................B\nB..................B\nB............E.....B\nB......B...........B\nBE.......B......B..B\nB..................B\nB..............B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 2", "map": "BBBBBBBBBBBBBBBBBBBB\nB.....B............B\nB..................B\nB..................B\nB.E........E.......B\nB..................B\nB..................B\nB..B...............B\nB.........B........B\nB..................B\nB.........PB.......B\nB...........B......B\nB..............B...B\nB..................B\nB..................B\nB........B.........B\nB...B..........E...B\nB...........E......B\nB.E........E...B...B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Fallback level 3", "map": "BBBBBBBBBBBBBBBBBBBB\nB...........E......B\nB........B....B....B\nB.E................B\nB..................B\nB..............E.B.B\nB.B...........BE.E.B\nB..................B\nB..................B\nB........B.........B\nBB........P........B\nB.............E....B\nBB.................B\nBB..........B......B\nB..EB........E.....B\nB..................B\nB..................B\nB......B...........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 1/10\n- Number of enemies: 4\n- Number of barriers: 6\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 6 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 4 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 1\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB.......E..........B\nB..................B\nB........B.........B\nB........B.........B\nB........B....E....B\nB........B.........B\nB..................B\nB.....B............B\nB.....B.P..........B\nB.....B............B\nB..........B.......B\nB..........B.......B\nB.....E....B.......B\nB..........B.......B\nB..................B\nB............E.....B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 1/10\n- Number of enemies: 4\n- Number of barriers: 6\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 6 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 4 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 1\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..................B\nB........E.........B\nB..................B\nB.............B....B\nB..................B\nB....B......E......B\nB..................B\nB..........B.......B\nB....P............EB\nB......B...........B\nB.........E........B\nB..................B\nB......B...........B\nB....B.............B\nB..................B\nB....E.............B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 2/10\n- Number of enemies: 6\n- Number of barriers: 9\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 9 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 6 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 2\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB.E....B...........B\nB......B...........B\nB........E.........B\nB.......B..........B\nB..........B.......B\nB..................B\nB....E.......E.....B\nB..................B\nB..B...............B\nB....B...E.........B\nB.........B........B\nB..................B\nB.......B..........B\nB..................B\nB.E....P.....E.....B\nB.......B..........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 1/10\n- Number of enemies: 4\n- Number of barriers: 6\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 6 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 4 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 1\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..E...............B\nB........B.........B\nB........B..E......B\nB.....B.........B..B\nB.....B............B\nB............B.....B\nB.............B....B\nB..................B\nB.....E............B\nB..................B\nB..B...............B\nB..B...............B\nB......B...........B\nB....P.B.........E.B\nB........B.........B\nB..................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 2/10\n- Number of enemies: 6\n- Number of barriers: 9\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 9 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 6 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 2\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB..E...............B\nB....B.........E...B\nB......B...........B\nB.....B............B\nB.................EB\nB.......B..........B\nB..........B.......B\nB......E.......B...B\nB.................EB\nB..E...............B\nB.......B..........B\nB.............B....B\nB..P..........B....B\nB.......E.........EB\nB..................B\nB.....E............B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "Create a game level map for a top-down 2D game with the following specifications:\n- Map size: 20x20 tiles\n- Level difficulty: 1/10\n- Number of enemies: 4\n- Number of barriers: 6\n\nUse these symbols:\n- 'B' for barriers/walls\n- 'E' for enemies\n- 'P' for player (place at a strategic position)\n- '.' for empty walkable spaces\n\nThe map should have:\n1. A border made of 'B' characters. Total number of 'B's in the map = 6 + 76.\n2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n3. 4 enemies 'E' placed strategically\n4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n5. The level should be challenging but fair for difficulty 1\n6. The two corner barriers in each row 'B' must be accounted inside 20x20. Therefore,\n   row length = 20. The same is with the height.\n7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move.\n\nReturn ONLY the map as a JSON array of strings, with no additional text.\nExample format for a 5x5 map:\n[\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]", "map": "BBBBBBBBBBBBBBBBBBBB\nB.P...............EB\nB..................B\nB..................B\nB..................B\nB.B...............BB\nB..........B.......B\nB..........B.......B\nB.........EB.......B\nB..................B\nB..................B\nB..................B\nB......B...........B\nBE.....B...........B\nB......B...........B\nB..................B\nB..................B\nB.E................B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
